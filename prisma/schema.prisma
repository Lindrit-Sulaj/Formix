datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  hashedPassword String?
  email String? @unique
  emailVerified Boolean?
  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  forms Form[]
  accounts Account[]
  sessions Session[]
}

model Form {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  allowedDomain String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  submissions Submission[]
}

model Submission {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  formId String @db.ObjectId
  data Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)
}